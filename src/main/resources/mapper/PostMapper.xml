<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.oneplane.post.mapper.PostMapper">

    <!-- 게시글 결과 매핑 -->
    <resultMap id="PostResultMap" type="com.oneplane.post.domain.Post">
        <id property="postId" column="post_id"/>
        <result property="userId" column="user_id"/>
        <result property="title" column="title"/>
        <result property="content" column="content"/>
        <result property="thumbnailImage" column="thumbnail_image"/>
        <result property="category" column="category" typeHandler="org.apache.ibatis.type.EnumTypeHandler"/>
        <result property="viewCount" column="view_count"/>
        <result property="likeCount" column="like_count"/>
        <result property="commentCount" column="comment_count"/>
        <result property="createdAt" column="created_at"/>
        <result property="updatedAt" column="updated_at"/>
        <result property="deletedAt" column="deleted_at"/>

        <!-- 작성자 정보 매핑 -->
        <association property="user" javaType="com.oneplane.user.domain.User">
            <id property="user_id" column="user_user_id"/>
            <result property="email" column="user_email"/>
            <result property="name" column="user_name"/>
            <result property="nickname" column="user_nickname"/>
            <result property="profileImg" column="user_profile_img"/>
        </association>
    </resultMap>

    <!-- 전체 게시글 목록 조회 -->
    <select id="findAllPosts" resultMap="PostResultMap">
        SELECT
            p.post_id,
            p.user_id,
            p.title,
            p.content,
            p.thumbnail_image,
            p.category,
            p.view_count,
            p.like_count,
            p.comment_count,
            p.created_at,
            p.updated_at,
            p.deleted_at,

            -- 작성자 정보
            u.user_id as user_user_id,
            u.email as user_email,
            u.name as user_name,
            u.nickname as user_nickname,
            u.profile_img as user_profile_img

        FROM posts p
                 LEFT JOIN users u ON p.user_id = u.user_id
        WHERE p.deleted_at IS NULL
        ORDER BY p.created_at DESC
    </select>
    <select id="findPostsWithPaging" parameterType="com.oneplane.post.domain.PostSearchCondition" resultMap="PostResultMap">
        <![CDATA[
        SELECT * FROM (
            SELECT ROWNUM rn, a.* FROM (
                SELECT
                    p.post_id,
                    p.user_id,
                    p.title,
                    p.content,
                    p.thumbnail_image,
                    p.category,
                    p.view_count,
                    p.like_count,
                    p.comment_count,
                    p.created_at,
                    p.updated_at,
                    p.deleted_at,

                    -- 작성자 정보
                    u.user_id as user_user_id,
                    u.email as user_email,
                    u.name as user_name,
                    u.nickname as user_nickname,
                    u.profile_img as user_profile_img

                FROM posts p
                LEFT JOIN users u ON p.user_id = u.user_id
                WHERE p.deleted_at IS NULL
        ]]>

        <!-- 카테고리 필터 -->
        <if test="category != null">
            AND p.category = #{category}
        </if>

        <!-- 검색 조건 -->
        <if test="searchKeyword != null and searchKeyword != ''">
            <choose>
                <when test="searchType == 'title'">
                    AND p.title LIKE '%' || #{searchKeyword} || '%'
                </when>
                <when test="searchType == 'content'">
                    AND p.content LIKE '%' || #{searchKeyword} || '%'
                </when>
                <when test="searchType == 'author'">
                    AND (u.name LIKE '%' || #{searchKeyword} || '%' OR u.nickname LIKE '%' || #{searchKeyword} || '%')
                </when>
                <otherwise>
                    AND (p.title LIKE '%' || #{searchKeyword} || '%' OR p.content LIKE '%' || #{searchKeyword} || '%')
                </otherwise>
            </choose>
        </if>

        <!-- 특정 사용자 게시글만 조회 -->
        <if test="userId != null">
            AND p.user_id = #{userId}
        </if>

        <!-- 정렬 -->
        ORDER BY
        <choose>
            <when test="sortBy == 'view'">p.view_count DESC, p.created_at DESC</when>
            <when test="sortBy == 'like'">p.like_count DESC, p.created_at DESC</when>
            <otherwise>p.created_at DESC</otherwise>
        </choose>

        <![CDATA[
            ) a
            WHERE ROWNUM <= #{offset} + #{size}
        )
        WHERE rn > #{offset}
        ]]>
    </select>

    <!-- 총 게시글 수 조회 -->
    <select id="countPosts" parameterType="com.oneplane.post.domain.PostSearchCondition" resultType="int">
        SELECT COUNT(*)
        FROM posts p
        LEFT JOIN users u ON p.user_id = u.user_id
        WHERE p.deleted_at IS NULL

        <!-- 카테고리 필터 -->
        <if test="category != null">
            AND p.category = #{category}
        </if>

        <!-- 검색 조건 -->
        <if test="searchKeyword != null and searchKeyword != ''">
            <choose>
                <when test="searchType == 'title'">
                    AND p.title LIKE '%' || #{searchKeyword} || '%'
                </when>
                <when test="searchType == 'content'">
                    AND p.content LIKE '%' || #{searchKeyword} || '%'
                </when>
                <when test="searchType == 'author'">
                    AND (u.name LIKE '%' || #{searchKeyword} || '%' OR u.nickname LIKE '%' || #{searchKeyword} || '%')
                </when>
                <otherwise>
                    AND (p.title LIKE '%' || #{searchKeyword} || '%' OR p.content LIKE '%' || #{searchKeyword} || '%')
                </otherwise>
            </choose>
        </if>

        <!-- 특정 사용자 게시글만 조회 -->
        <if test="userId != null">
            AND p.user_id = #{userId}
        </if>
    </select>

    <!-- 카테고리별 게시글 목록 조회 (페이징) -->
    <select id="findPostsByCategory" resultMap="PostResultMap">
        <![CDATA[
        SELECT * FROM (
                          SELECT ROWNUM rn, a.* FROM (
                                                         SELECT
                                                             p.post_id,
                                                             p.user_id,
                                                             p.title,
                                                             p.content,
                                                             p.thumbnail_image,
                                                             p.category,
                                                             p.view_count,
                                                             p.like_count,
                                                             p.comment_count,
                                                             p.created_at,
                                                             p.updated_at,
                                                             p.deleted_at,

                                                             -- 작성자 정보
                                                             u.user_id as user_user_id,
                                                             u.email as user_email,
                                                             u.name as user_name,
                                                             u.nickname as user_nickname,
                                                             u.profile_img as user_profile_img

                                                         FROM posts p
                                                                  LEFT JOIN users u ON p.user_id = u.user_id
                                                         WHERE p.deleted_at IS NULL
                                                           AND p.category = #{category}
                                                         ORDER BY p.created_at DESC
                                                     ) a
                          WHERE ROWNUM <= #{offset} + #{size}
                      )
        WHERE rn > #{offset}
        ]]>
    </select>

    <!-- 카테고리별 게시글 수 조회 -->
    <select id="countPostsByCategory" resultType="int">
        SELECT COUNT(*)
        FROM posts p
        WHERE p.deleted_at IS NULL
          AND p.category = #{category}
    </select>

</mapper>